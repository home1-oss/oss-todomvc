<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.yirendai.infra</groupId>
        <artifactId>oss-todomvc</artifactId>
        <version>1.0.6.OSS-SNAPSHOT</version>
    </parent>

    <artifactId>oss-todomvc-app</artifactId>
    <name>oss-todomvc-app</name>
    <packaging>jar</packaging>

    <!--properties>
        <eureka.service.url>http://user:user_pass@local-eureka:8761/eureka/</eureka.service.url>
        <configserver.service.id>local-configserver</configserver.service.id>
        <cloudbus.service.url>local-cloudbus</cloudbus.service.url>
    </properties-->

    <profiles>
        <profile>
            <id>oauth2</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
            </build>
            <dependencies>
                <dependency>
                    <groupId>org.springframework.security.oauth</groupId>
                    <artifactId>spring-security-oauth2</artifactId>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>libsecurity</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>${project.groupId}</groupId>
                    <artifactId>oss-todomvc-security</artifactId>
                </dependency>
            </dependencies>
        </profile>
    </profiles>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>reserve-integration-server-port</id>
                        <goals>
                            <goal>reserve-network-port</goal>
                        </goals>
                        <phase>process-resources</phase>
                        <configuration>
                            <portNames>
                                <portName>integration.server.port</portName>
                            </portNames>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <mainClass>com.yirendai.todomvc.TodomvcApplication</mainClass>
                    <classifier>exec</classifier>
                    <layout>ZIP</layout>
                    <excludes>
                        <exclude>
                            <groupId>org.inferred</groupId>
                            <artifactId>freebuilder</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>com.google.auto.value</groupId>
                            <artifactId>auto-value</artifactId>
                        </exclude>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>repackage</goal>
                        </goals>
                        <configuration>
                            <attach>false</attach>
                        </configuration>
                    </execution>

                    <execution>
                        <id>pre-integration-test</id>
                        <goals>
                            <goal>start</goal>
                        </goals>
                        <configuration>
                            <arguments>
                                <argument>--server.port=${integration.server.port}</argument>
                                <!--argument>
                                    \-\-EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=${eureka.service.url}
                                </argument>
                                <argument>
                                    \-\-SPRING_CLOUD_CONFIG_DISCOVERY_SERVICEID=${configserver.service.id}
                                </argument>
                                <argument>
                                    \-\-SPRING_RABBITMQ_HOST=${cloudbus.service.url}
                                </argument-->
                            </arguments>
                            <profiles>
                                <profile>it.env</profile>
                            </profiles>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>post-integration-test</id>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                        <configuration>
                            <skip>${maven.integration-test.skip}</skip>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <systemPropertyVariables>
                        <test.server.port>${integration.server.port}</test.server.port>
                        <!--EUREKA_CLIENT_SERVICEURL_DEFAULTZONE>${eureka.service.url}</EUREKA_CLIENT_SERVICEURL_DEFAULTZONE>
                        <SPRING_CLOUD_CONFIG_DISCOVERY_SERVICEID>${configserver.service.id}</SPRING_CLOUD_CONFIG_DISCOVERY_SERVICEID>
                        <SPRING_RABBITMQ_HOST>${cloudbus.service.url}</SPRING_RABBITMQ_HOST-->
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.soebes.maven.plugins</groupId>
                <artifactId>echo-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>integration-test</phase>
                        <goals>
                            <goal>echo</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <echos>
                        <echo>============= DockerProperties =============</echo>
                        <echo>DockerProperty test server port : ${integration.server.port}</echo>
                        <echo>DockerProperty test server port : ${integration.server.port}</echo>
                        <!--echo>eureka.service.url : ${eureka.service.url}</echo>
                        <echo>configserver.service.id : ${configserver.service.id}</echo-->
                    </echos>
                </configuration>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-install</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <executions>
                    <execution>
                        <id>default-deploy</id>
                        <phase>none</phase>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-errorhandle-spring-boot-${spring-boot.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-webmvc-spring-boot-${spring-boot.version}</artifactId>
        </dependency>
        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-adminclient-spring-boot-${spring-boot.version}</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>com.yirendai.infra</groupId>
            <artifactId>oss-lib-swagger-spring-boot-${spring-boot.version}</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-config</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-bus-amqp</artifactId>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-rest-hal-browser</artifactId>
        </dependency>

        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>
</project>
